import streamlit as st
import pandas as pd
from sklearn.datasets import load_breast_cancer
from sklearn.preprocessing import StandardScaler

# Importa os m칩dulos de cada p치gina
import page_intro
import page_eda
import page_supervised
import page_unsupervised

# --- Configura칞칚o da P치gina ---
# Deve ser o primeiro comando Streamlit
st.set_page_config(
    page_title="ML na Sa칰de: An치lise de C칙ncer de Mama",
    page_icon="游뽘",
    layout="wide"
)

# --- Carregamento e Prepara칞칚o dos Dados ---
# @st.cache_data garante que os dados sejam carregados apenas uma vez.
@st.cache_data
def carregar_dados():
    """Carrega, mapeia e escala o dataset de C칙ncer de Mama."""
    data = load_breast_cancer()
    df = pd.DataFrame(data.data, columns=data.feature_names)
    df['diagnostico'] = data.target
    df['diagnostico'] = df['diagnostico'].map({0: 'Maligno', 1: 'Benigno'})
    
    # Prepara dados para modelos
    X = df[data.feature_names]
    y = df['diagnostico']
    
    # Escala os dados (importante para PCA e K-Means)
    scaler = StandardScaler()
    X_scaled = scaler.fit_transform(X)
    
    return df, data.feature_names, X, y, X_scaled

# Carrega os dados na inicializa칞칚o
df, feature_names, X, y, X_scaled = carregar_dados()


# --- Barra Lateral (Navega칞칚o) ---
st.sidebar.title("Navega칞칚o 游빐")
st.sidebar.markdown("Atividade de Recupera칞칚o - Machine Learning")

# Dicion치rio para mapear nomes de p치gina para fun칞칫es de renderiza칞칚o
paginas = {
    "Introdu칞칚o": page_intro,
    "An치lise Explorat칩ria (EDA)": page_eda,
    "Modelo Supervisionado (Classifica칞칚o)": page_supervised,
    "Modelo N칚o Supervisionado (Clusteriza칞칚o)": page_unsupervised
}

# Cria o seletor de p치gina
pagina_selecionada = st.sidebar.radio("Selecione uma se칞칚o:", paginas.keys())

st.sidebar.markdown("---")
st.sidebar.markdown("Desenvolvido por: ~Emmanuel Ferr칚o")


# --- Renderiza칞칚o da P치gina ---
# Chama a fun칞칚o 'render_page' do m칩dulo selecionado
if pagina_selecionada == "Introdu칞칚o":
    page_intro.render_page(df, X)
    
elif pagina_selecionada == "An치lise Explorat칩ria (EDA)":
    page_eda.render_page(df, feature_names)

elif pagina_selecionada == "Modelo Supervisionado (Classifica칞칚o)":
    page_supervised.render_page(X_scaled, y, feature_names)

elif pagina_selecionada == "Modelo N칚o Supervisionado (Clusteriza칞칚o)":
    page_unsupervised.render_page(X_scaled, y)